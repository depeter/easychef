// <auto-generated />
using EasyChef.Backend.Rest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EasyChef.Backend.Rest.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20171117140447_AddRecepyColumns")]
    partial class AddRecepyColumns
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvailableOnUrl");

                    b.Property<long>("ExternalId");

                    b.Property<bool>("HasProducts");

                    b.Property<DateTime?>("LastProductScan");

                    b.Property<DateTime?>("LastScan");

                    b.Property<string>("Link");

                    b.Property<string>("Name");

                    b.Property<int?>("ParentId");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RecepyId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("RecepyId");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("LastScan");

                    b.Property<string>("Name");

                    b.Property<string>("Price");

                    b.Property<string>("SKU");

                    b.Property<string>("Unit");

                    b.Property<string>("UnitPrice");

                    b.Property<string>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Recepy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Base64Image");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Recepies");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.RecepyPreparation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Explanation");

                    b.Property<int>("RecepyId");

                    b.Property<int>("Step");

                    b.HasKey("Id");

                    b.HasIndex("RecepyId");

                    b.ToTable("RecepyPreparations");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("LastScan");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.ShoppingCartProduct", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ShoppingCartId");

                    b.HasKey("ProductId", "ShoppingCartId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartProducts");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Category", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Ingredient", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.Recepy", "Recepy")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecepyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.Product", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.RecepyPreparation", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.Recepy", "Recepy")
                        .WithMany("RecepyPreparations")
                        .HasForeignKey("RecepyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.ShoppingCart", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.User", "User")
                        .WithOne("ShoppingCart")
                        .HasForeignKey("EasyChef.Backend.Rest.Models.ShoppingCart", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EasyChef.Backend.Rest.Models.ShoppingCartProduct", b =>
                {
                    b.HasOne("EasyChef.Backend.Rest.Models.Product", "Product")
                        .WithMany("ShoppingCartProduct")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EasyChef.Backend.Rest.Models.ShoppingCart", "ShoppingCart")
                        .WithMany("ShoppingCartProducts")
                        .HasForeignKey("ShoppingCartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
